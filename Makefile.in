
ifeq ($(DEBUG), TRUE)
	CFLAGS := -Wall -Werror -Wextra -pedantic -O0 -g
	BUILD_DIR := bin/debug/
else
	CFLAGS := -O3
	BUILD_DIR := bin/release/
endif
CFLAGS += -std=c99 -MMD

ifeq ($(V), FALSE)
	SILENCE = # none
else
	SILENCE = @
endif

CC ?= gcc
LDFLAGS = # none
SOURCE_DIRS := src include
VPATH := $(SOURCE_DIRS)
HEADERS := $(wildcard include/*.h)
OBJ := $(patsubst src/%.c, $(BUILD_DIR)%.c, $(wildcard src/*.c))
OBJ := $(OBJ:.c=.o)
EXEC := led

SHOW_COMMAND := @printf "%-15s%s\n"
SHOW_CC := $(SHOW_COMMAND) "[ $(CC) ]"
SHOW_CLEAN := $(SHOW_COMMAND) "[ CLEAN ]"

.PHONY: all
all: $(BUILD_DIR)$(EXEC)

$(BUILD_DIR)$(EXEC): $(OBJ)
	$(SHOW_CC) $@
	$(SILENCE)$(CC) $(LDFLAGS) $^ -o $@

$(BUILD_DIR)%.o: %.c $(HEADERS)
	$(SHOW_CC) $@
	$(SILENCE)$(CC) $(CFLAGS) -c $< -o $@

include $(wildcard $(BUILD_DIR)*.d)

.PHONY: install unistall clean cleandep
install: $(BUILD_DIR)$(EXEC)
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp $< $(DESTDIR)$(PREFIX)/bin/$(EXEC)

uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/$(EXEC)

clean:
	$(SHOW_CLEAN) $(BUILD_DIR)
	$(SILENCE) rm -rf $(OBJ) $(BUILD_DIR)$(EXEC)

cleandep:
	$(SHOW_CLEAN) $(BUILD_DIR)
	$(SILENCE)rm -rf $(BUILD_DIR)*.d

